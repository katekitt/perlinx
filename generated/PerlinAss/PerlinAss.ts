// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractExpired extends ethereum.Event {
  get params(): ContractExpired__Params {
    return new ContractExpired__Params(this);
  }
}

export class ContractExpired__Params {
  _event: ContractExpired;

  constructor(event: ContractExpired) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DisputeSettled extends ethereum.Event {
  get params(): DisputeSettled__Params {
    return new DisputeSettled__Params(this);
  }
}

export class DisputeSettled__Params {
  _event: DisputeSettled;

  constructor(event: DisputeSettled) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get disputer(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get liquidationId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get disputeSucceeded(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class EmergencyShutdown extends ethereum.Event {
  get params(): EmergencyShutdown__Params {
    return new EmergencyShutdown__Params(this);
  }
}

export class EmergencyShutdown__Params {
  _event: EmergencyShutdown;

  constructor(event: EmergencyShutdown) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get originalExpirationTimestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shutdownTimestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EndedSponsorPosition extends ethereum.Event {
  get params(): EndedSponsorPosition__Params {
    return new EndedSponsorPosition__Params(this);
  }
}

export class EndedSponsorPosition__Params {
  _event: EndedSponsorPosition;

  constructor(event: EndedSponsorPosition) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FinalFeesPaid extends ethereum.Event {
  get params(): FinalFeesPaid__Params {
    return new FinalFeesPaid__Params(this);
  }
}

export class FinalFeesPaid__Params {
  _event: FinalFeesPaid;

  constructor(event: FinalFeesPaid) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LiquidationCreated extends ethereum.Event {
  get params(): LiquidationCreated__Params {
    return new LiquidationCreated__Params(this);
  }
}

export class LiquidationCreated__Params {
  _event: LiquidationCreated;

  constructor(event: LiquidationCreated) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get liquidationId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokensOutstanding(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get lockedCollateral(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get liquidatedCollateral(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get liquidationTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LiquidationDisputed extends ethereum.Event {
  get params(): LiquidationDisputed__Params {
    return new LiquidationDisputed__Params(this);
  }
}

export class LiquidationDisputed__Params {
  _event: LiquidationDisputed;

  constructor(event: LiquidationDisputed) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get disputer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get liquidationId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get disputeBondAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LiquidationWithdrawn extends ethereum.Event {
  get params(): LiquidationWithdrawn__Params {
    return new LiquidationWithdrawn__Params(this);
  }
}

export class LiquidationWithdrawn__Params {
  _event: LiquidationWithdrawn;

  constructor(event: LiquidationWithdrawn) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawalAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get liquidationStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get settlementPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NewSponsor extends ethereum.Event {
  get params(): NewSponsor__Params {
    return new NewSponsor__Params(this);
  }
}

export class NewSponsor__Params {
  _event: NewSponsor;

  constructor(event: NewSponsor) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PositionCreated extends ethereum.Event {
  get params(): PositionCreated__Params {
    return new PositionCreated__Params(this);
  }
}

export class PositionCreated__Params {
  _event: PositionCreated;

  constructor(event: PositionCreated) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RegularFeesPaid extends ethereum.Event {
  get params(): RegularFeesPaid__Params {
    return new RegularFeesPaid__Params(this);
  }
}

export class RegularFeesPaid__Params {
  _event: RegularFeesPaid;

  constructor(event: RegularFeesPaid) {
    this._event = event;
  }

  get regularFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lateFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestTransferPosition extends ethereum.Event {
  get params(): RequestTransferPosition__Params {
    return new RequestTransferPosition__Params(this);
  }
}

export class RequestTransferPosition__Params {
  _event: RequestTransferPosition;

  constructor(event: RequestTransferPosition) {
    this._event = event;
  }

  get oldSponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RequestTransferPositionCanceled extends ethereum.Event {
  get params(): RequestTransferPositionCanceled__Params {
    return new RequestTransferPositionCanceled__Params(this);
  }
}

export class RequestTransferPositionCanceled__Params {
  _event: RequestTransferPositionCanceled;

  constructor(event: RequestTransferPositionCanceled) {
    this._event = event;
  }

  get oldSponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RequestTransferPositionExecuted extends ethereum.Event {
  get params(): RequestTransferPositionExecuted__Params {
    return new RequestTransferPositionExecuted__Params(this);
  }
}

export class RequestTransferPositionExecuted__Params {
  _event: RequestTransferPositionExecuted;

  constructor(event: RequestTransferPositionExecuted) {
    this._event = event;
  }

  get oldSponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSponsor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestWithdrawal extends ethereum.Event {
  get params(): RequestWithdrawal__Params {
    return new RequestWithdrawal__Params(this);
  }
}

export class RequestWithdrawal__Params {
  _event: RequestWithdrawal;

  constructor(event: RequestWithdrawal) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestWithdrawalCanceled extends ethereum.Event {
  get params(): RequestWithdrawalCanceled__Params {
    return new RequestWithdrawalCanceled__Params(this);
  }
}

export class RequestWithdrawalCanceled__Params {
  _event: RequestWithdrawalCanceled;

  constructor(event: RequestWithdrawalCanceled) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestWithdrawalExecuted extends ethereum.Event {
  get params(): RequestWithdrawalExecuted__Params {
    return new RequestWithdrawalExecuted__Params(this);
  }
}

export class RequestWithdrawalExecuted__Params {
  _event: RequestWithdrawalExecuted;

  constructor(event: RequestWithdrawalExecuted) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SettleExpiredPosition extends ethereum.Event {
  get params(): SettleExpiredPosition__Params {
    return new SettleExpiredPosition__Params(this);
  }
}

export class SettleExpiredPosition__Params {
  _event: SettleExpiredPosition;

  constructor(event: SettleExpiredPosition) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralReturned(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokensBurned(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get sponsor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PerlinAss__createLiquidationResultTokensLiquidatedStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__createLiquidationResultFinalFeeBondStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__createLiquidationResult {
  value0: BigInt;
  value1: PerlinAss__createLiquidationResultTokensLiquidatedStruct;
  value2: PerlinAss__createLiquidationResultFinalFeeBondStruct;

  constructor(
    value0: BigInt,
    value1: PerlinAss__createLiquidationResultTokensLiquidatedStruct,
    value2: PerlinAss__createLiquidationResultFinalFeeBondStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    return map;
  }
}

export class PerlinAss__createLiquidationInputMinCollateralPerTokenStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__createLiquidationInputMaxCollateralPerTokenStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__createLiquidationInputMaxTokensToLiquidateStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__disputeResultTotalPaidStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getCollateralResultCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataStruct extends ethereum.Tuple {
  get sponsor(): Address {
    return this[0].toAddress();
  }

  get liquidator(): Address {
    return this[1].toAddress();
  }

  get state(): i32 {
    return this[2].toI32();
  }

  get liquidationTime(): BigInt {
    return this[3].toBigInt();
  }

  get tokensOutstanding(): PerlinAss__getLiquidationsResultLiquidationDataTokensOutstandingStruct {
    return this[4].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataTokensOutstandingStruct;
  }

  get lockedCollateral(): PerlinAss__getLiquidationsResultLiquidationDataLockedCollateralStruct {
    return this[5].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataLockedCollateralStruct;
  }

  get liquidatedCollateral(): PerlinAss__getLiquidationsResultLiquidationDataLiquidatedCollateralStruct {
    return this[6].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataLiquidatedCollateralStruct;
  }

  get rawUnitCollateral(): PerlinAss__getLiquidationsResultLiquidationDataRawUnitCollateralStruct {
    return this[7].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataRawUnitCollateralStruct;
  }

  get disputer(): Address {
    return this[8].toAddress();
  }

  get settlementPrice(): PerlinAss__getLiquidationsResultLiquidationDataSettlementPriceStruct {
    return this[9].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataSettlementPriceStruct;
  }

  get finalFee(): PerlinAss__getLiquidationsResultLiquidationDataFinalFeeStruct {
    return this[10].toTuple() as PerlinAss__getLiquidationsResultLiquidationDataFinalFeeStruct;
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataTokensOutstandingStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataLockedCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataLiquidatedCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataRawUnitCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataSettlementPriceStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__getLiquidationsResultLiquidationDataFinalFeeStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultTokensOutstandingStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultLockedCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultLiquidatedCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultRawUnitCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultSettlementPriceStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResultFinalFeeStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__liquidationsResult {
  value0: Address;
  value1: Address;
  value2: i32;
  value3: BigInt;
  value4: PerlinAss__liquidationsResultTokensOutstandingStruct;
  value5: PerlinAss__liquidationsResultLockedCollateralStruct;
  value6: PerlinAss__liquidationsResultLiquidatedCollateralStruct;
  value7: PerlinAss__liquidationsResultRawUnitCollateralStruct;
  value8: Address;
  value9: PerlinAss__liquidationsResultSettlementPriceStruct;
  value10: PerlinAss__liquidationsResultFinalFeeStruct;

  constructor(
    value0: Address,
    value1: Address,
    value2: i32,
    value3: BigInt,
    value4: PerlinAss__liquidationsResultTokensOutstandingStruct,
    value5: PerlinAss__liquidationsResultLockedCollateralStruct,
    value6: PerlinAss__liquidationsResultLiquidatedCollateralStruct,
    value7: PerlinAss__liquidationsResultRawUnitCollateralStruct,
    value8: Address,
    value9: PerlinAss__liquidationsResultSettlementPriceStruct,
    value10: PerlinAss__liquidationsResultFinalFeeStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromTuple(this.value4));
    map.set("value5", ethereum.Value.fromTuple(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    map.set("value9", ethereum.Value.fromTuple(this.value9));
    map.set("value10", ethereum.Value.fromTuple(this.value10));
    return map;
  }
}

export class PerlinAss__payRegularFeesResultTotalPaidStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__pfcResultValue0Struct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__positionsResultTokensOutstandingStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__positionsResultWithdrawalRequestAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__positionsResultRawCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__positionsResult {
  value0: PerlinAss__positionsResultTokensOutstandingStruct;
  value1: BigInt;
  value2: PerlinAss__positionsResultWithdrawalRequestAmountStruct;
  value3: PerlinAss__positionsResultRawCollateralStruct;
  value4: BigInt;

  constructor(
    value0: PerlinAss__positionsResultTokensOutstandingStruct,
    value1: BigInt,
    value2: PerlinAss__positionsResultWithdrawalRequestAmountStruct,
    value3: PerlinAss__positionsResultRawCollateralStruct,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    map.set("value3", ethereum.Value.fromTuple(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }
}

export class PerlinAss__redeemResultAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__redeemInputNumTokensStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__settleExpiredResultAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__totalPositionCollateralResultTotalCollateralStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__trimExcessResultAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__withdrawResultAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__withdrawInputCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__withdrawLiquidationResultAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss__withdrawPassedRequestResultAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class PerlinAss extends ethereum.SmartContract {
  static bind(address: Address): PerlinAss {
    return new PerlinAss("PerlinAss", address);
  }

  collateralCurrency(): Address {
    let result = super.call(
      "collateralCurrency",
      "collateralCurrency():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_collateralCurrency(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "collateralCurrency",
      "collateralCurrency():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateralRequirement(): BigInt {
    let result = super.call(
      "collateralRequirement",
      "collateralRequirement():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_collateralRequirement(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "collateralRequirement",
      "collateralRequirement():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  contractState(): i32 {
    let result = super.call("contractState", "contractState():(uint8)", []);

    return result[0].toI32();
  }

  try_contractState(): ethereum.CallResult<i32> {
    let result = super.tryCall("contractState", "contractState():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  createLiquidation(
    sponsor: Address,
    minCollateralPerToken: PerlinAss__createLiquidationInputMinCollateralPerTokenStruct,
    maxCollateralPerToken: PerlinAss__createLiquidationInputMaxCollateralPerTokenStruct,
    maxTokensToLiquidate: PerlinAss__createLiquidationInputMaxTokensToLiquidateStruct,
    deadline: BigInt
  ): PerlinAss__createLiquidationResult {
    let result = super.call(
      "createLiquidation",
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256):(uint256,(uint256),(uint256))",
      [
        ethereum.Value.fromAddress(sponsor),
        ethereum.Value.fromTuple(minCollateralPerToken),
        ethereum.Value.fromTuple(maxCollateralPerToken),
        ethereum.Value.fromTuple(maxTokensToLiquidate),
        ethereum.Value.fromUnsignedBigInt(deadline)
      ]
    );

    return new PerlinAss__createLiquidationResult(
      result[0].toBigInt(),
      result[1].toTuple() as PerlinAss__createLiquidationResultTokensLiquidatedStruct,
      result[2].toTuple() as PerlinAss__createLiquidationResultFinalFeeBondStruct
    );
  }

  try_createLiquidation(
    sponsor: Address,
    minCollateralPerToken: PerlinAss__createLiquidationInputMinCollateralPerTokenStruct,
    maxCollateralPerToken: PerlinAss__createLiquidationInputMaxCollateralPerTokenStruct,
    maxTokensToLiquidate: PerlinAss__createLiquidationInputMaxTokensToLiquidateStruct,
    deadline: BigInt
  ): ethereum.CallResult<PerlinAss__createLiquidationResult> {
    let result = super.tryCall(
      "createLiquidation",
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256):(uint256,(uint256),(uint256))",
      [
        ethereum.Value.fromAddress(sponsor),
        ethereum.Value.fromTuple(minCollateralPerToken),
        ethereum.Value.fromTuple(maxCollateralPerToken),
        ethereum.Value.fromTuple(maxTokensToLiquidate),
        ethereum.Value.fromUnsignedBigInt(deadline)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerlinAss__createLiquidationResult(
        value[0].toBigInt(),
        value[1].toTuple() as PerlinAss__createLiquidationResultTokensLiquidatedStruct,
        value[2].toTuple() as PerlinAss__createLiquidationResultFinalFeeBondStruct
      )
    );
  }

  cumulativeFeeMultiplier(): BigInt {
    let result = super.call(
      "cumulativeFeeMultiplier",
      "cumulativeFeeMultiplier():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_cumulativeFeeMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cumulativeFeeMultiplier",
      "cumulativeFeeMultiplier():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dispute(
    liquidationId: BigInt,
    sponsor: Address
  ): PerlinAss__disputeResultTotalPaidStruct {
    let result = super.call("dispute", "dispute(uint256,address):((uint256))", [
      ethereum.Value.fromUnsignedBigInt(liquidationId),
      ethereum.Value.fromAddress(sponsor)
    ]);

    return result[0].toTuple() as PerlinAss__disputeResultTotalPaidStruct;
  }

  try_dispute(
    liquidationId: BigInt,
    sponsor: Address
  ): ethereum.CallResult<PerlinAss__disputeResultTotalPaidStruct> {
    let result = super.tryCall(
      "dispute",
      "dispute(uint256,address):((uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(liquidationId),
        ethereum.Value.fromAddress(sponsor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__disputeResultTotalPaidStruct
    );
  }

  disputeBondPct(): BigInt {
    let result = super.call("disputeBondPct", "disputeBondPct():(uint256)", []);

    return result[0].toBigInt();
  }

  try_disputeBondPct(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "disputeBondPct",
      "disputeBondPct():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  disputerDisputeRewardPct(): BigInt {
    let result = super.call(
      "disputerDisputeRewardPct",
      "disputerDisputeRewardPct():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_disputerDisputeRewardPct(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "disputerDisputeRewardPct",
      "disputerDisputeRewardPct():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  excessTokenBeneficiary(): Address {
    let result = super.call(
      "excessTokenBeneficiary",
      "excessTokenBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_excessTokenBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "excessTokenBeneficiary",
      "excessTokenBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  expirationTimestamp(): BigInt {
    let result = super.call(
      "expirationTimestamp",
      "expirationTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_expirationTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "expirationTimestamp",
      "expirationTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  expiryPrice(): BigInt {
    let result = super.call("expiryPrice", "expiryPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_expiryPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("expiryPrice", "expiryPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  finder(): Address {
    let result = super.call("finder", "finder():(address)", []);

    return result[0].toAddress();
  }

  try_finder(): ethereum.CallResult<Address> {
    let result = super.tryCall("finder", "finder():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCollateral(
    sponsor: Address
  ): PerlinAss__getCollateralResultCollateralAmountStruct {
    let result = super.call(
      "getCollateral",
      "getCollateral(address):((uint256))",
      [ethereum.Value.fromAddress(sponsor)]
    );

    return result[0].toTuple() as PerlinAss__getCollateralResultCollateralAmountStruct;
  }

  try_getCollateral(
    sponsor: Address
  ): ethereum.CallResult<PerlinAss__getCollateralResultCollateralAmountStruct> {
    let result = super.tryCall(
      "getCollateral",
      "getCollateral(address):((uint256))",
      [ethereum.Value.fromAddress(sponsor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__getCollateralResultCollateralAmountStruct
    );
  }

  getCurrentTime(): BigInt {
    let result = super.call("getCurrentTime", "getCurrentTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCurrentTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentTime",
      "getCurrentTime():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLiquidations(
    sponsor: Address
  ): Array<PerlinAss__getLiquidationsResultLiquidationDataStruct> {
    let result = super.call(
      "getLiquidations",
      "getLiquidations(address):((address,address,uint8,uint256,(uint256),(uint256),(uint256),(uint256),address,(uint256),(uint256))[])",
      [ethereum.Value.fromAddress(sponsor)]
    );

    return result[0].toTupleArray<
      PerlinAss__getLiquidationsResultLiquidationDataStruct
    >();
  }

  try_getLiquidations(
    sponsor: Address
  ): ethereum.CallResult<
    Array<PerlinAss__getLiquidationsResultLiquidationDataStruct>
  > {
    let result = super.tryCall(
      "getLiquidations",
      "getLiquidations(address):((address,address,uint8,uint256,(uint256),(uint256),(uint256),(uint256),address,(uint256),(uint256))[])",
      [ethereum.Value.fromAddress(sponsor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        PerlinAss__getLiquidationsResultLiquidationDataStruct
      >()
    );
  }

  liquidationLiveness(): BigInt {
    let result = super.call(
      "liquidationLiveness",
      "liquidationLiveness():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_liquidationLiveness(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidationLiveness",
      "liquidationLiveness():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidations(param0: Address, param1: BigInt): PerlinAss__liquidationsResult {
    let result = super.call(
      "liquidations",
      "liquidations(address,uint256):(address,address,uint8,uint256,(uint256),(uint256),(uint256),(uint256),address,(uint256),(uint256))",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new PerlinAss__liquidationsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toTuple() as PerlinAss__liquidationsResultTokensOutstandingStruct,
      result[5].toTuple() as PerlinAss__liquidationsResultLockedCollateralStruct,
      result[6].toTuple() as PerlinAss__liquidationsResultLiquidatedCollateralStruct,
      result[7].toTuple() as PerlinAss__liquidationsResultRawUnitCollateralStruct,
      result[8].toAddress(),
      result[9].toTuple() as PerlinAss__liquidationsResultSettlementPriceStruct,
      result[10].toTuple() as PerlinAss__liquidationsResultFinalFeeStruct
    );
  }

  try_liquidations(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<PerlinAss__liquidationsResult> {
    let result = super.tryCall(
      "liquidations",
      "liquidations(address,uint256):(address,address,uint8,uint256,(uint256),(uint256),(uint256),(uint256),address,(uint256),(uint256))",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerlinAss__liquidationsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toTuple() as PerlinAss__liquidationsResultTokensOutstandingStruct,
        value[5].toTuple() as PerlinAss__liquidationsResultLockedCollateralStruct,
        value[6].toTuple() as PerlinAss__liquidationsResultLiquidatedCollateralStruct,
        value[7].toTuple() as PerlinAss__liquidationsResultRawUnitCollateralStruct,
        value[8].toAddress(),
        value[9].toTuple() as PerlinAss__liquidationsResultSettlementPriceStruct,
        value[10].toTuple() as PerlinAss__liquidationsResultFinalFeeStruct
      )
    );
  }

  minSponsorTokens(): BigInt {
    let result = super.call(
      "minSponsorTokens",
      "minSponsorTokens():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minSponsorTokens(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minSponsorTokens",
      "minSponsorTokens():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  payRegularFees(): PerlinAss__payRegularFeesResultTotalPaidStruct {
    let result = super.call(
      "payRegularFees",
      "payRegularFees():((uint256))",
      []
    );

    return result[0].toTuple() as PerlinAss__payRegularFeesResultTotalPaidStruct;
  }

  try_payRegularFees(): ethereum.CallResult<
    PerlinAss__payRegularFeesResultTotalPaidStruct
  > {
    let result = super.tryCall(
      "payRegularFees",
      "payRegularFees():((uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__payRegularFeesResultTotalPaidStruct
    );
  }

  pfc(): PerlinAss__pfcResultValue0Struct {
    let result = super.call("pfc", "pfc():((uint256))", []);

    return result[0].toTuple() as PerlinAss__pfcResultValue0Struct;
  }

  try_pfc(): ethereum.CallResult<PerlinAss__pfcResultValue0Struct> {
    let result = super.tryCall("pfc", "pfc():((uint256))", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__pfcResultValue0Struct
    );
  }

  positions(param0: Address): PerlinAss__positionsResult {
    let result = super.call(
      "positions",
      "positions(address):((uint256),uint256,(uint256),(uint256),uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new PerlinAss__positionsResult(
      result[0].toTuple() as PerlinAss__positionsResultTokensOutstandingStruct,
      result[1].toBigInt(),
      result[2].toTuple() as PerlinAss__positionsResultWithdrawalRequestAmountStruct,
      result[3].toTuple() as PerlinAss__positionsResultRawCollateralStruct,
      result[4].toBigInt()
    ) as PerlinAss__positionsResult;
  }

  try_positions(
    param0: Address
  ): ethereum.CallResult<PerlinAss__positionsResult> {
    let result = super.tryCall(
      "positions",
      "positions(address):((uint256),uint256,(uint256),(uint256),uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerlinAss__positionsResult(
        value[0].toTuple() as PerlinAss__positionsResultTokensOutstandingStruct,
        value[1].toBigInt(),
        value[2].toTuple() as PerlinAss__positionsResultWithdrawalRequestAmountStruct,
        value[3].toTuple() as PerlinAss__positionsResultRawCollateralStruct,
        value[4].toBigInt()
      ) as PerlinAss__positionsResult
    );
  }

  priceIdentifier(): Bytes {
    let result = super.call(
      "priceIdentifier",
      "priceIdentifier():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_priceIdentifier(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "priceIdentifier",
      "priceIdentifier():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  rawLiquidationCollateral(): BigInt {
    let result = super.call(
      "rawLiquidationCollateral",
      "rawLiquidationCollateral():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_rawLiquidationCollateral(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rawLiquidationCollateral",
      "rawLiquidationCollateral():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rawTotalPositionCollateral(): BigInt {
    let result = super.call(
      "rawTotalPositionCollateral",
      "rawTotalPositionCollateral():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_rawTotalPositionCollateral(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rawTotalPositionCollateral",
      "rawTotalPositionCollateral():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeem(
    numTokens: PerlinAss__redeemInputNumTokensStruct
  ): PerlinAss__redeemResultAmountWithdrawnStruct {
    let result = super.call("redeem", "redeem((uint256)):((uint256))", [
      ethereum.Value.fromTuple(numTokens)
    ]);

    return result[0].toTuple() as PerlinAss__redeemResultAmountWithdrawnStruct;
  }

  try_redeem(
    numTokens: PerlinAss__redeemInputNumTokensStruct
  ): ethereum.CallResult<PerlinAss__redeemResultAmountWithdrawnStruct> {
    let result = super.tryCall("redeem", "redeem((uint256)):((uint256))", [
      ethereum.Value.fromTuple(numTokens)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__redeemResultAmountWithdrawnStruct
    );
  }

  settleExpired(): PerlinAss__settleExpiredResultAmountWithdrawnStruct {
    let result = super.call("settleExpired", "settleExpired():((uint256))", []);

    return result[0].toTuple() as PerlinAss__settleExpiredResultAmountWithdrawnStruct;
  }

  try_settleExpired(): ethereum.CallResult<
    PerlinAss__settleExpiredResultAmountWithdrawnStruct
  > {
    let result = super.tryCall(
      "settleExpired",
      "settleExpired():((uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__settleExpiredResultAmountWithdrawnStruct
    );
  }

  sponsorDisputeRewardPct(): BigInt {
    let result = super.call(
      "sponsorDisputeRewardPct",
      "sponsorDisputeRewardPct():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sponsorDisputeRewardPct(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sponsorDisputeRewardPct",
      "sponsorDisputeRewardPct():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  timerAddress(): Address {
    let result = super.call("timerAddress", "timerAddress():(address)", []);

    return result[0].toAddress();
  }

  try_timerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("timerAddress", "timerAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenCurrency(): Address {
    let result = super.call("tokenCurrency", "tokenCurrency():(address)", []);

    return result[0].toAddress();
  }

  try_tokenCurrency(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenCurrency",
      "tokenCurrency():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalPositionCollateral(): PerlinAss__totalPositionCollateralResultTotalCollateralStruct {
    let result = super.call(
      "totalPositionCollateral",
      "totalPositionCollateral():((uint256))",
      []
    );

    return result[0].toTuple() as PerlinAss__totalPositionCollateralResultTotalCollateralStruct;
  }

  try_totalPositionCollateral(): ethereum.CallResult<
    PerlinAss__totalPositionCollateralResultTotalCollateralStruct
  > {
    let result = super.tryCall(
      "totalPositionCollateral",
      "totalPositionCollateral():((uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__totalPositionCollateralResultTotalCollateralStruct
    );
  }

  totalTokensOutstanding(): BigInt {
    let result = super.call(
      "totalTokensOutstanding",
      "totalTokensOutstanding():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalTokensOutstanding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalTokensOutstanding",
      "totalTokensOutstanding():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  trimExcess(token: Address): PerlinAss__trimExcessResultAmountStruct {
    let result = super.call("trimExcess", "trimExcess(address):((uint256))", [
      ethereum.Value.fromAddress(token)
    ]);

    return result[0].toTuple() as PerlinAss__trimExcessResultAmountStruct;
  }

  try_trimExcess(
    token: Address
  ): ethereum.CallResult<PerlinAss__trimExcessResultAmountStruct> {
    let result = super.tryCall(
      "trimExcess",
      "trimExcess(address):((uint256))",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__trimExcessResultAmountStruct
    );
  }

  withdraw(
    collateralAmount: PerlinAss__withdrawInputCollateralAmountStruct
  ): PerlinAss__withdrawResultAmountWithdrawnStruct {
    let result = super.call("withdraw", "withdraw((uint256)):((uint256))", [
      ethereum.Value.fromTuple(collateralAmount)
    ]);

    return result[0].toTuple() as PerlinAss__withdrawResultAmountWithdrawnStruct;
  }

  try_withdraw(
    collateralAmount: PerlinAss__withdrawInputCollateralAmountStruct
  ): ethereum.CallResult<PerlinAss__withdrawResultAmountWithdrawnStruct> {
    let result = super.tryCall("withdraw", "withdraw((uint256)):((uint256))", [
      ethereum.Value.fromTuple(collateralAmount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__withdrawResultAmountWithdrawnStruct
    );
  }

  withdrawLiquidation(
    liquidationId: BigInt,
    sponsor: Address
  ): PerlinAss__withdrawLiquidationResultAmountWithdrawnStruct {
    let result = super.call(
      "withdrawLiquidation",
      "withdrawLiquidation(uint256,address):((uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(liquidationId),
        ethereum.Value.fromAddress(sponsor)
      ]
    );

    return result[0].toTuple() as PerlinAss__withdrawLiquidationResultAmountWithdrawnStruct;
  }

  try_withdrawLiquidation(
    liquidationId: BigInt,
    sponsor: Address
  ): ethereum.CallResult<
    PerlinAss__withdrawLiquidationResultAmountWithdrawnStruct
  > {
    let result = super.tryCall(
      "withdrawLiquidation",
      "withdrawLiquidation(uint256,address):((uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(liquidationId),
        ethereum.Value.fromAddress(sponsor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__withdrawLiquidationResultAmountWithdrawnStruct
    );
  }

  withdrawPassedRequest(): PerlinAss__withdrawPassedRequestResultAmountWithdrawnStruct {
    let result = super.call(
      "withdrawPassedRequest",
      "withdrawPassedRequest():((uint256))",
      []
    );

    return result[0].toTuple() as PerlinAss__withdrawPassedRequestResultAmountWithdrawnStruct;
  }

  try_withdrawPassedRequest(): ethereum.CallResult<
    PerlinAss__withdrawPassedRequestResultAmountWithdrawnStruct
  > {
    let result = super.tryCall(
      "withdrawPassedRequest",
      "withdrawPassedRequest():((uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PerlinAss__withdrawPassedRequestResultAmountWithdrawnStruct
    );
  }

  withdrawalLiveness(): BigInt {
    let result = super.call(
      "withdrawalLiveness",
      "withdrawalLiveness():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_withdrawalLiveness(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawalLiveness",
      "withdrawalLiveness():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get params(): ConstructorCallParamsStruct {
    return this._call.inputValues[0].value.toTuple() as ConstructorCallParamsStruct;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCallParamsStruct extends ethereum.Tuple {
  get expirationTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get withdrawalLiveness(): BigInt {
    return this[1].toBigInt();
  }

  get collateralAddress(): Address {
    return this[2].toAddress();
  }

  get finderAddress(): Address {
    return this[3].toAddress();
  }

  get tokenFactoryAddress(): Address {
    return this[4].toAddress();
  }

  get timerAddress(): Address {
    return this[5].toAddress();
  }

  get excessTokenBeneficiary(): Address {
    return this[6].toAddress();
  }

  get priceFeedIdentifier(): Bytes {
    return this[7].toBytes();
  }

  get syntheticName(): string {
    return this[8].toString();
  }

  get syntheticSymbol(): string {
    return this[9].toString();
  }

  get minSponsorTokens(): ConstructorCallParamsMinSponsorTokensStruct {
    return this[10].toTuple() as ConstructorCallParamsMinSponsorTokensStruct;
  }

  get liquidationLiveness(): BigInt {
    return this[11].toBigInt();
  }

  get collateralRequirement(): ConstructorCallParamsCollateralRequirementStruct {
    return this[12].toTuple() as ConstructorCallParamsCollateralRequirementStruct;
  }

  get disputeBondPct(): ConstructorCallParamsDisputeBondPctStruct {
    return this[13].toTuple() as ConstructorCallParamsDisputeBondPctStruct;
  }

  get sponsorDisputeRewardPct(): ConstructorCallParamsSponsorDisputeRewardPctStruct {
    return this[14].toTuple() as ConstructorCallParamsSponsorDisputeRewardPctStruct;
  }

  get disputerDisputeRewardPct(): ConstructorCallParamsDisputerDisputeRewardPctStruct {
    return this[15].toTuple() as ConstructorCallParamsDisputerDisputeRewardPctStruct;
  }
}

export class ConstructorCallParamsMinSponsorTokensStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class ConstructorCallParamsCollateralRequirementStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class ConstructorCallParamsDisputeBondPctStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class ConstructorCallParamsSponsorDisputeRewardPctStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class ConstructorCallParamsDisputerDisputeRewardPctStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CancelTransferPositionCall extends ethereum.Call {
  get inputs(): CancelTransferPositionCall__Inputs {
    return new CancelTransferPositionCall__Inputs(this);
  }

  get outputs(): CancelTransferPositionCall__Outputs {
    return new CancelTransferPositionCall__Outputs(this);
  }
}

export class CancelTransferPositionCall__Inputs {
  _call: CancelTransferPositionCall;

  constructor(call: CancelTransferPositionCall) {
    this._call = call;
  }
}

export class CancelTransferPositionCall__Outputs {
  _call: CancelTransferPositionCall;

  constructor(call: CancelTransferPositionCall) {
    this._call = call;
  }
}

export class CancelWithdrawalCall extends ethereum.Call {
  get inputs(): CancelWithdrawalCall__Inputs {
    return new CancelWithdrawalCall__Inputs(this);
  }

  get outputs(): CancelWithdrawalCall__Outputs {
    return new CancelWithdrawalCall__Outputs(this);
  }
}

export class CancelWithdrawalCall__Inputs {
  _call: CancelWithdrawalCall;

  constructor(call: CancelWithdrawalCall) {
    this._call = call;
  }
}

export class CancelWithdrawalCall__Outputs {
  _call: CancelWithdrawalCall;

  constructor(call: CancelWithdrawalCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get collateralAmount(): CreateCallCollateralAmountStruct {
    return this._call.inputValues[0].value.toTuple() as CreateCallCollateralAmountStruct;
  }

  get numTokens(): CreateCallNumTokensStruct {
    return this._call.inputValues[1].value.toTuple() as CreateCallNumTokensStruct;
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}

export class CreateCallCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateCallNumTokensStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateLiquidationCall extends ethereum.Call {
  get inputs(): CreateLiquidationCall__Inputs {
    return new CreateLiquidationCall__Inputs(this);
  }

  get outputs(): CreateLiquidationCall__Outputs {
    return new CreateLiquidationCall__Outputs(this);
  }
}

export class CreateLiquidationCall__Inputs {
  _call: CreateLiquidationCall;

  constructor(call: CreateLiquidationCall) {
    this._call = call;
  }

  get sponsor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get minCollateralPerToken(): CreateLiquidationCallMinCollateralPerTokenStruct {
    return this._call.inputValues[1].value.toTuple() as CreateLiquidationCallMinCollateralPerTokenStruct;
  }

  get maxCollateralPerToken(): CreateLiquidationCallMaxCollateralPerTokenStruct {
    return this._call.inputValues[2].value.toTuple() as CreateLiquidationCallMaxCollateralPerTokenStruct;
  }

  get maxTokensToLiquidate(): CreateLiquidationCallMaxTokensToLiquidateStruct {
    return this._call.inputValues[3].value.toTuple() as CreateLiquidationCallMaxTokensToLiquidateStruct;
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateLiquidationCall__Outputs {
  _call: CreateLiquidationCall;

  constructor(call: CreateLiquidationCall) {
    this._call = call;
  }

  get liquidationId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get tokensLiquidated(): CreateLiquidationCallTokensLiquidatedStruct {
    return this._call.outputValues[1].value.toTuple() as CreateLiquidationCallTokensLiquidatedStruct;
  }

  get finalFeeBond(): CreateLiquidationCallFinalFeeBondStruct {
    return this._call.outputValues[2].value.toTuple() as CreateLiquidationCallFinalFeeBondStruct;
  }
}

export class CreateLiquidationCallMinCollateralPerTokenStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateLiquidationCallMaxCollateralPerTokenStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateLiquidationCallMaxTokensToLiquidateStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateLiquidationCallTokensLiquidatedStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class CreateLiquidationCallFinalFeeBondStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get collateralAmount(): DepositCallCollateralAmountStruct {
    return this._call.inputValues[0].value.toTuple() as DepositCallCollateralAmountStruct;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCallCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class DepositToCall extends ethereum.Call {
  get inputs(): DepositToCall__Inputs {
    return new DepositToCall__Inputs(this);
  }

  get outputs(): DepositToCall__Outputs {
    return new DepositToCall__Outputs(this);
  }
}

export class DepositToCall__Inputs {
  _call: DepositToCall;

  constructor(call: DepositToCall) {
    this._call = call;
  }

  get sponsor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateralAmount(): DepositToCallCollateralAmountStruct {
    return this._call.inputValues[1].value.toTuple() as DepositToCallCollateralAmountStruct;
  }
}

export class DepositToCall__Outputs {
  _call: DepositToCall;

  constructor(call: DepositToCall) {
    this._call = call;
  }
}

export class DepositToCallCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class DisputeCall extends ethereum.Call {
  get inputs(): DisputeCall__Inputs {
    return new DisputeCall__Inputs(this);
  }

  get outputs(): DisputeCall__Outputs {
    return new DisputeCall__Outputs(this);
  }
}

export class DisputeCall__Inputs {
  _call: DisputeCall;

  constructor(call: DisputeCall) {
    this._call = call;
  }

  get liquidationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DisputeCall__Outputs {
  _call: DisputeCall;

  constructor(call: DisputeCall) {
    this._call = call;
  }

  get totalPaid(): DisputeCallTotalPaidStruct {
    return this._call.outputValues[0].value.toTuple() as DisputeCallTotalPaidStruct;
  }
}

export class DisputeCallTotalPaidStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class EmergencyShutdownCall extends ethereum.Call {
  get inputs(): EmergencyShutdownCall__Inputs {
    return new EmergencyShutdownCall__Inputs(this);
  }

  get outputs(): EmergencyShutdownCall__Outputs {
    return new EmergencyShutdownCall__Outputs(this);
  }
}

export class EmergencyShutdownCall__Inputs {
  _call: EmergencyShutdownCall;

  constructor(call: EmergencyShutdownCall) {
    this._call = call;
  }
}

export class EmergencyShutdownCall__Outputs {
  _call: EmergencyShutdownCall;

  constructor(call: EmergencyShutdownCall) {
    this._call = call;
  }
}

export class ExpireCall extends ethereum.Call {
  get inputs(): ExpireCall__Inputs {
    return new ExpireCall__Inputs(this);
  }

  get outputs(): ExpireCall__Outputs {
    return new ExpireCall__Outputs(this);
  }
}

export class ExpireCall__Inputs {
  _call: ExpireCall;

  constructor(call: ExpireCall) {
    this._call = call;
  }
}

export class ExpireCall__Outputs {
  _call: ExpireCall;

  constructor(call: ExpireCall) {
    this._call = call;
  }
}

export class PayRegularFeesCall extends ethereum.Call {
  get inputs(): PayRegularFeesCall__Inputs {
    return new PayRegularFeesCall__Inputs(this);
  }

  get outputs(): PayRegularFeesCall__Outputs {
    return new PayRegularFeesCall__Outputs(this);
  }
}

export class PayRegularFeesCall__Inputs {
  _call: PayRegularFeesCall;

  constructor(call: PayRegularFeesCall) {
    this._call = call;
  }
}

export class PayRegularFeesCall__Outputs {
  _call: PayRegularFeesCall;

  constructor(call: PayRegularFeesCall) {
    this._call = call;
  }

  get totalPaid(): PayRegularFeesCallTotalPaidStruct {
    return this._call.outputValues[0].value.toTuple() as PayRegularFeesCallTotalPaidStruct;
  }
}

export class PayRegularFeesCallTotalPaidStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get numTokens(): RedeemCallNumTokensStruct {
    return this._call.inputValues[0].value.toTuple() as RedeemCallNumTokensStruct;
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get amountWithdrawn(): RedeemCallAmountWithdrawnStruct {
    return this._call.outputValues[0].value.toTuple() as RedeemCallAmountWithdrawnStruct;
  }
}

export class RedeemCallNumTokensStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class RedeemCallAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class RemarginCall extends ethereum.Call {
  get inputs(): RemarginCall__Inputs {
    return new RemarginCall__Inputs(this);
  }

  get outputs(): RemarginCall__Outputs {
    return new RemarginCall__Outputs(this);
  }
}

export class RemarginCall__Inputs {
  _call: RemarginCall;

  constructor(call: RemarginCall) {
    this._call = call;
  }
}

export class RemarginCall__Outputs {
  _call: RemarginCall;

  constructor(call: RemarginCall) {
    this._call = call;
  }
}

export class RequestTransferPositionCall extends ethereum.Call {
  get inputs(): RequestTransferPositionCall__Inputs {
    return new RequestTransferPositionCall__Inputs(this);
  }

  get outputs(): RequestTransferPositionCall__Outputs {
    return new RequestTransferPositionCall__Outputs(this);
  }
}

export class RequestTransferPositionCall__Inputs {
  _call: RequestTransferPositionCall;

  constructor(call: RequestTransferPositionCall) {
    this._call = call;
  }
}

export class RequestTransferPositionCall__Outputs {
  _call: RequestTransferPositionCall;

  constructor(call: RequestTransferPositionCall) {
    this._call = call;
  }
}

export class RequestWithdrawalCall extends ethereum.Call {
  get inputs(): RequestWithdrawalCall__Inputs {
    return new RequestWithdrawalCall__Inputs(this);
  }

  get outputs(): RequestWithdrawalCall__Outputs {
    return new RequestWithdrawalCall__Outputs(this);
  }
}

export class RequestWithdrawalCall__Inputs {
  _call: RequestWithdrawalCall;

  constructor(call: RequestWithdrawalCall) {
    this._call = call;
  }

  get collateralAmount(): RequestWithdrawalCallCollateralAmountStruct {
    return this._call.inputValues[0].value.toTuple() as RequestWithdrawalCallCollateralAmountStruct;
  }
}

export class RequestWithdrawalCall__Outputs {
  _call: RequestWithdrawalCall;

  constructor(call: RequestWithdrawalCall) {
    this._call = call;
  }
}

export class RequestWithdrawalCallCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetCurrentTimeCall extends ethereum.Call {
  get inputs(): SetCurrentTimeCall__Inputs {
    return new SetCurrentTimeCall__Inputs(this);
  }

  get outputs(): SetCurrentTimeCall__Outputs {
    return new SetCurrentTimeCall__Outputs(this);
  }
}

export class SetCurrentTimeCall__Inputs {
  _call: SetCurrentTimeCall;

  constructor(call: SetCurrentTimeCall) {
    this._call = call;
  }

  get time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCurrentTimeCall__Outputs {
  _call: SetCurrentTimeCall;

  constructor(call: SetCurrentTimeCall) {
    this._call = call;
  }
}

export class SettleExpiredCall extends ethereum.Call {
  get inputs(): SettleExpiredCall__Inputs {
    return new SettleExpiredCall__Inputs(this);
  }

  get outputs(): SettleExpiredCall__Outputs {
    return new SettleExpiredCall__Outputs(this);
  }
}

export class SettleExpiredCall__Inputs {
  _call: SettleExpiredCall;

  constructor(call: SettleExpiredCall) {
    this._call = call;
  }
}

export class SettleExpiredCall__Outputs {
  _call: SettleExpiredCall;

  constructor(call: SettleExpiredCall) {
    this._call = call;
  }

  get amountWithdrawn(): SettleExpiredCallAmountWithdrawnStruct {
    return this._call.outputValues[0].value.toTuple() as SettleExpiredCallAmountWithdrawnStruct;
  }
}

export class SettleExpiredCallAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class TransferPositionPassedRequestCall extends ethereum.Call {
  get inputs(): TransferPositionPassedRequestCall__Inputs {
    return new TransferPositionPassedRequestCall__Inputs(this);
  }

  get outputs(): TransferPositionPassedRequestCall__Outputs {
    return new TransferPositionPassedRequestCall__Outputs(this);
  }
}

export class TransferPositionPassedRequestCall__Inputs {
  _call: TransferPositionPassedRequestCall;

  constructor(call: TransferPositionPassedRequestCall) {
    this._call = call;
  }

  get newSponsorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferPositionPassedRequestCall__Outputs {
  _call: TransferPositionPassedRequestCall;

  constructor(call: TransferPositionPassedRequestCall) {
    this._call = call;
  }
}

export class TrimExcessCall extends ethereum.Call {
  get inputs(): TrimExcessCall__Inputs {
    return new TrimExcessCall__Inputs(this);
  }

  get outputs(): TrimExcessCall__Outputs {
    return new TrimExcessCall__Outputs(this);
  }
}

export class TrimExcessCall__Inputs {
  _call: TrimExcessCall;

  constructor(call: TrimExcessCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TrimExcessCall__Outputs {
  _call: TrimExcessCall;

  constructor(call: TrimExcessCall) {
    this._call = call;
  }

  get amount(): TrimExcessCallAmountStruct {
    return this._call.outputValues[0].value.toTuple() as TrimExcessCallAmountStruct;
  }
}

export class TrimExcessCallAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get collateralAmount(): WithdrawCallCollateralAmountStruct {
    return this._call.inputValues[0].value.toTuple() as WithdrawCallCollateralAmountStruct;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amountWithdrawn(): WithdrawCallAmountWithdrawnStruct {
    return this._call.outputValues[0].value.toTuple() as WithdrawCallAmountWithdrawnStruct;
  }
}

export class WithdrawCallCollateralAmountStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class WithdrawCallAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class WithdrawLiquidationCall extends ethereum.Call {
  get inputs(): WithdrawLiquidationCall__Inputs {
    return new WithdrawLiquidationCall__Inputs(this);
  }

  get outputs(): WithdrawLiquidationCall__Outputs {
    return new WithdrawLiquidationCall__Outputs(this);
  }
}

export class WithdrawLiquidationCall__Inputs {
  _call: WithdrawLiquidationCall;

  constructor(call: WithdrawLiquidationCall) {
    this._call = call;
  }

  get liquidationId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get sponsor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawLiquidationCall__Outputs {
  _call: WithdrawLiquidationCall;

  constructor(call: WithdrawLiquidationCall) {
    this._call = call;
  }

  get amountWithdrawn(): WithdrawLiquidationCallAmountWithdrawnStruct {
    return this._call.outputValues[0].value.toTuple() as WithdrawLiquidationCallAmountWithdrawnStruct;
  }
}

export class WithdrawLiquidationCallAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}

export class WithdrawPassedRequestCall extends ethereum.Call {
  get inputs(): WithdrawPassedRequestCall__Inputs {
    return new WithdrawPassedRequestCall__Inputs(this);
  }

  get outputs(): WithdrawPassedRequestCall__Outputs {
    return new WithdrawPassedRequestCall__Outputs(this);
  }
}

export class WithdrawPassedRequestCall__Inputs {
  _call: WithdrawPassedRequestCall;

  constructor(call: WithdrawPassedRequestCall) {
    this._call = call;
  }
}

export class WithdrawPassedRequestCall__Outputs {
  _call: WithdrawPassedRequestCall;

  constructor(call: WithdrawPassedRequestCall) {
    this._call = call;
  }

  get amountWithdrawn(): WithdrawPassedRequestCallAmountWithdrawnStruct {
    return this._call.outputValues[0].value.toTuple() as WithdrawPassedRequestCallAmountWithdrawnStruct;
  }
}

export class WithdrawPassedRequestCallAmountWithdrawnStruct extends ethereum.Tuple {
  get rawValue(): BigInt {
    return this[0].toBigInt();
  }
}
